// <auto-generated />
using System;
using API.DAL.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20211104062640_UpdateMasterConfiguration")]
    partial class UpdateMasterConfiguration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("API.Models.Common", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CommonProperty1")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CommonProperty2")
                        .HasColumnType("varchar(50)");

                    b.Property<long>("MasterId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("MasterId");

                    b.ToTable("Common");
                });

            modelBuilder.Entity("API.Models.Detail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DetailProperty1")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DetailProperty2")
                        .HasColumnType("varchar(50)");

                    b.Property<long>("MasterId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("MasterId");

                    b.ToTable("Detail");
                });

            modelBuilder.Entity("API.Models.Master", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MasterProperty1")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("MasterProperty2")
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Master");
                });

            modelBuilder.Entity("API.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Username")
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("API.Models.Common", b =>
                {
                    b.HasOne("API.Models.Master", null)
                        .WithMany("Commons")
                        .HasForeignKey("MasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("API.Models.Detail", b =>
                {
                    b.HasOne("API.Models.Master", "Master")
                        .WithMany("Details")
                        .HasForeignKey("MasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Master");
                });

            modelBuilder.Entity("API.Models.Master", b =>
                {
                    b.Navigation("Commons");

                    b.Navigation("Details");
                });
#pragma warning restore 612, 618
        }
    }
}
